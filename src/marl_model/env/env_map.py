import numpy as np


class BaseEnvMap(np.ndarray):

    def __new__(cls, *args, **kwargs):

        if 'data' in kwargs:

            data = kwargs['data']
            del kwargs['data']
            new_cls = super().__new__(cls, *args, **kwargs, shape=(len(data), len(data[0])))
            new_cls[:] = data
            return new_cls

        if not 'shape' in kwargs and len(args) == 0:
            new_cls = super().__new__(cls, *args, **kwargs, shape=cls.__map__.shape)
        else:
            new_cls = super().__new__(cls, *args, **kwargs)
            new_cls[:] = 1

        min_shape = np.min((new_cls.shape, new_cls.__map__.shape), axis=0)
        new_cls[:min_shape[0], :min_shape[1]] = new_cls.__map__[:min_shape[0], :min_shape[1]]

        return new_cls


class SimpleEnvMap(BaseEnvMap):

    __map__ = np.array([
        [0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 1., 1., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 1., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1., 0., 1., 0.],
        [1., 1., 0., 0., 0., 0., 0., 1., 0.],
        [1., 1., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1., 0., 1., 0.],
        [1., 1., 1., 0., 0., 0., 0., 0., 0.],
    ])

class SimpleEnvMap1(BaseEnvMap):

    __map__ = np.array([
        [0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 1., 1., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 1., 0., 1., 0.],
        [0., 0., 0., 1., 0., 1., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0., 0., 1., 0.],
        [1., 1., 0., 0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 1., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1., 0., 1., 0.],
        [1., 1., 1., 0., 0., 0., 0., 0., 0.],
    ])

class SimpleEnvMap1(BaseEnvMap):

    __map__ = np.array([
        [1., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 1., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 1., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0., 1., 0., 0.],
        [1., 1., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 1., 0., 1., 0.],
        [0., 0., 0., 1., 0., 1., 0., 1., 0.],
        [1., 1., 1., 0., 0., 0., 0., 0., 0.],
    ])

class ProbEnvMap(BaseEnvMap):

    __map__ = np.array([
        [0.0, 0.2, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0],
        [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0],
        [0.5, 0.0, 0.0, 0.1, 0.5, 1.0, 0.1, 1.0, 0.3],
        [0.0, 0.0, 0.0, 0.5, 0.0, 1.0, 0.0, 1.0, 0.0],
        [1.0, 1.0, 0.0, 0.0, 0.0, 0.1, 0.0, 1.0, 0.0],
        [1.0, 1.0, 0.3, 0.0, 0.8, 0.0, 0.0, 1.0, 0.0],
        [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0],
        [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0],
        [1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    ])

class ProbEnvMap1(BaseEnvMap):

    __map__ = np.array([
        [0.1, 0.2, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0],
        [0.0, 1.0, 0.0, 1.0, 0.2, 0.1, 0.0, 0.0, 0.0],
        [0.5, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 1.0, 0.3],
        [0.0, 0.0, 0.0, 0.5, 0.0, 1.0, 0.0, 1.0, 0.0],
        [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0],
        [1.0, 1.0, 0.3, 0.0, 0.8, 0.0, 0.0, 1.0, 0.0],
        [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0],
        [0.0, 0.0, 0.0, 0.8, 0.0, 1.0, 0.0, 1.0, 0.0],
        [1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    ])
